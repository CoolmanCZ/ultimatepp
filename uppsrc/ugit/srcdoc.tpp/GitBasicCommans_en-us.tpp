topic "Git basic commands";
[l288;i1120;a17;O9;~~~.1408;2 $$1,0#10431211400427159095818037425705:param]
[a83;*R6 $$2,5#31310162474203024125188417583966:caption]
[H4;b83;*4 $$3,5#07864147445237544204411237157677:title]
[i288;O9;C2 $$4,6#40027414424643823182269349404212:item]
[b42;a42;2 $$5,5#45413000475342174754091244180557:text]
[l288;b17;a17;2 $$6,6#27521748481378242620020725143825:desc]
[l321;C@5;1 $$7,7#20902679421464641399138805415013:code]
[b2503;2 $$8,0#65142375456100023862071332075487:separator]
[*@(0.0.255)2 $$9,0#83433469410354161042741608181528:base]
[C2 $$10,0#37138531426314131251341829483380:class]
[l288;a17;*1 $$11,11#70004532496200323422659154056402:requirement]
[i417;b42;a42;O9;~~~.416;2 $$12,12#10566046415157235020018451313112:tparam]
[b167;C2 $$13,13#92430459443460461911108080531343:item1]
[i288;a42;O9;C2 $$14,14#77422149456609303542238260500223:item2]
[*@2$(0.128.128)2 $$15,15#34511555403152284025741354420178:NewsDate]
[l321;*C$7;2 $$16,16#03451589433145915344929335295360:result]
[l321;b83;a83;*C$7;2 $$17,17#07531550463529505371228428965313:result`-line]
[l160;*C+117 $$18,5#88603949442205825958800053222425:package`-title]
[2 $$19,0#53580023442335529039900623488521:gap]
[C2 $$20,20#70211524482531209251820423858195:class`-nested]
[b50;2 $$21,21#03324558446220344731010354752573:Par]
[2 $$0,0#00000000000000000000000000000000:Default]
[{_}%EN-US 
[s2; Git basic commands&]
[s0; Git is the open source distributed version control system. On 
this page we would like to introduce some basic GIT command to 
help you work with the GIT repository. For detailed description 
of the GIT we recommend to read the [^https`:`/`/git`-scm`.com`/book`/en`/v2`/^ Pro
 Git book]. Or you can read online documentation at [^https`:`/`/git`-scm`.com`/doc^ h
ttps://git`-scm.com/doc].&]
[s0; &]
[s5; [*+92 Repository]&]
[s1; git init -|Creates a new local repository&]
[s1; git clone-|Downloads a project and its entire version history 
from remote&]
[s5; [*+92 Changes]&]
[s1; git add-|Snapshots the file in preparation for versioning&]
[s1; git status-|Lists all new or modified files to be committed&]
[s1; git diff-|Shows file differences not yet staged&]
[s1; git reset-|Unstages the file, but preserve its contents&]
[s1; git commit-|Records file snapshots permanently in version history&]
[s1; git mv-|Changes the file name and prepares it for commit&]
[s1; git rm-|Deletes the file from the working directory and stages 
the deletion&]
[s1; git branch-|Lists all local branches or creates/deletes new branch&]
[s1; git checkout-|Switches to the specified branch and updates the 
working directory&]
[s5; [*+92 Synchronize changes]&]
[s1; git fetch-|Downloads all history from the remote repository bookmarks&]
[s1; git merge-|Combines bookmarkâ€™s branch into current local branch&]
[s1; git pull-|Downloads bookmark history and incorporates changes&]
[s1; git push-|Uploads all local branch commits to remote repository&]
[s5; [*+92 Save fragments]&]
[s1; git stash-|Temporarily stores all modified tracked files&]
[s1; git stash list-|Lists all stashed changesets&]
[s1; git stash pop-|Restores the most recently stashed files&]
[s0; &]
[s3; Create new repository for the project&]
[s5; If you already have files you can add them to the local Git 
repository using command line instructions below.&]
[s0; &]
[s5; Git global setup `- set user information for [*/ all local repositories].&]
[s7; git config `-`-global user.name [@4 `"user name`"]&]
[s7; git config `-`-global user.email [@4 `"user`@email.address`"]&]
[s0; &]
[s5; Git local setup `- configure user information for the [*/ current 
local repository].&]
[s7; cd existing`_folder&]
[s7; git config `-`-local user.name [@4 `"user name`"]&]
[s7; git config `-`-local user.email [@4 `"user`@email.address`"]&]
[s0;* &]
[s5; Create new local repository `- start a new repository in existing 
folder&]
[s7; cd existing`_folder&]
[s7; git init&]
[s7; git add .&]
[s7; git commit&]
[s0; &]
[s3; Work with existing project&]
[s5; Download existing project and its entire version history from 
remote repository.&]
[s5; Clone remote repository&]
[s7; git clone https://github.com/ultimatepp/mirror.git ultimatepp&]
[s7; cd ultimatepp&]
[s0; &]
[s5; Create new branch&]
[s7; git branch <branch`_name>&]
[s0; &]
[s5; Commit all local changes&]
[s7; git commit `-a `-m [@4 `"Commit message`"]&]
[s7; &]
[s5; Upload local changes to the remote repository&]
[s7; git push `-u origin <branch`_name>&]
[s0; &]
[s5; Download and incorporates changes from remote repository&]
[s7; git pull&]
[s5; ]]